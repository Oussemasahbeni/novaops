server:
  port: 8222

spring:
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: true
              lower-case-service-id: true
          default-filters:
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT
                methods: GET, POST
                backoff:
                  firstBackoff: 500ms
                  maxBackoff: 2000ms
                  factor: 2
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20 # requests per second
                redis-rate-limiter.burstCapacity: 40 # maximum burst capacity
                redis-rate-limiter.requestedTokens: 1 # tokens per request
                key-resolver: "#{@ipKeyResolver}"
          routes:
            - id: user-service
              uri: lb://USER-SERVICE
              predicates:
                - Path=/api/v1/users/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: userServiceCircuitBreaker
                    fallbackUri: forward:/fallback/user-service


resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
  timelimiter:
    configs:
      default:
        timeout-duration: 3s

  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 500ms


springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /docs
    operationsSorter: method
    display-request-duration: true
    urls:
      - url: /api-docs
        name: API Gateway Service
      - name: User Service API
        url: /user-service/v3/api-docs
      - name: Notification Service API
        url: /notification-service/v3/api-docs
